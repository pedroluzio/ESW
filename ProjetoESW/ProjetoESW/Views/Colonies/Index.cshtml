@model IEnumerable<ProjetoESW.Models.Colonies.Colony>

@{
    ViewData["Title"] = "Index";
    if (ViewData["layout"] == "")
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
}
<div class="card">
    <div class="header">
        <h2>Listagem de Colónias</h2>
    </div>
    <div class="body">
        <table class="table" id="colonias">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Location)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Location)
                        </td>
                        <td>
                            <a asp-action="Details" asp-route-id="@item.ID"><i class="fa fa-eye"></i></a>
                            @if (item.CanDelete())
                            {
                                <a onclick="erase(@item.ID);" style="cursor: pointer;"><i class="fa fa-trash"></i></a>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <a asp-action="Create" class="btn btn-primary btn-export">
            <i class="fa fa-plus"></i> Adicionar
        </a>
    </div>
</div>





<div class="card">
    <div class="header">
        <h2>Localização das Colónias</h2>
    </div>
    <div class="body">

        <div style="height: 500px;" id="map"></div>
    </div>
</div>

<script src="~/plugins/momentjs/moment.js"></script>
<script src="~/plugins/bootstrap-material-datetimepicker/js/bootstrap-material-datetimepicker.js"></script>
<script>


    initAutocomplete();
    //create empty LatLngBounds object
   

    function initAutocomplete() {
        var map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: 38.55870505322026, lng: - 9.040355064339678 },
            zoom: 50,
            mapTypeId: 'satellite'
        });

        var locations = [];
        @foreach (var item in Model)
        {
            <text>
                locations.push(['@item.Name', @item.GetLatitude(), @item.GetLongitude()]);
            </text>   
        }
        var bounds = new google.maps.LatLngBounds();
        var infowindow = new google.maps.InfoWindow();    

        for (i = 0; i < locations.length; i++) {  
            var marker = new google.maps.Marker({
                position: new google.maps.LatLng(locations[i][1], locations[i][2]),
                map: map
            });

            //extend the bounds to include each marker's position
            bounds.extend(marker.position);

            google.maps.event.addListener(marker, 'click', (function(marker, i) {
                return function() {
                    infowindow.setContent(locations[i][0]);
                    infowindow.open(map, marker);
                }
            })(marker, i));
        }

//now fit the map to the newly inclusive bounds
        map.fitBounds(bounds);
        

        
    }


</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCUZ8_O03cS9hUMhJbTQ0rOIjskzNcDzds&libraries=places&callback=initAutocomplete"
        async defer></script>

<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCUZ8_O03cS9hUMhJbTQ0rOIjskzNcDzds&libraries=places"></script>




@section Scripts {

    <script>
        function erase(id) {
            swal({
                title: "Confirmar?",
                text: "Tem a certeza que pretende eliminar esta Colónia?",
                type: "warning",
                buttons: [
                    'Não, Cancelar',
                    'Sim, Eliminar'
                ],
                dangerMode: true,
            }).then(function (isConfirm) {
                if (isConfirm) {
                    $.ajax({
                        type: "post",
                        url: "Colonies/Delete/" + id,
                        data: { id: id },
                        ajaxasync: true,
                        success: function () {
                            location.reload();
                        }
                    });
                } else {
                    swal("Cancelado", "Colónia não vai ser eliminada", "error");
                }
            });
        }
    </script>


    <script src="~/plugins/jquery-datatable/jquery.dataTables.js"></script>
    <script src="~/plugins/jquery-datatable/skin/bootstrap/js/dataTables.bootstrap.js"></script>
    <script src="~/plugins/jquery-datatable/extensions/export/buttons.flash.min.js"></script>
    <script src="~/plugins/jquery-datatable/extensions/export/buttons.html5.min.js"></script>
    <script src="~/plugins/jquery-datatable/extensions/export/buttons.print.min.js"></script>
    <script src="~/plugins/jquery-datatable/extensions/export/dataTables.buttons.min.js"></script>
    <script src="~/plugins/jquery-datatable/extensions/export/jszip.min.js"></script>
    <script src="~/plugins/jquery-datatable/extensions/export/pdfmake.min.js"></script>
    <script src="~/plugins/jquery-datatable/extensions/export/vfs_fonts.js"></script>

    <script>
        //Exportable table
        var table = $('#colonias').DataTable({
            dom: 'Bfrtip',
            responsive: true,
            buttons: [
                'copy', 'csv', 'excel', 'pdf', 'print'
            ]
        });

        table.columns.adjust().draw();
    </script>
}