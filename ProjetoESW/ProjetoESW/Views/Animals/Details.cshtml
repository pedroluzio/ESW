@model ProjetoESW.Models.Animals.Animal

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="col-md-4">
    <div id="listaApontamentos" class="card col-md-12">
        <div class="header">
            <h2>Lista de Apontamentos</h2>
        </div>
        <div class="body">
            @foreach (var item in Model.GetAppointments())
            {

                <p><i style="cursor: pointer;" onclick="DeleteAppointment(@item.ID);" class="fas fa-trash-alt"></i> <b>@item.Date.ToString("dd-MM-yyyy")</b></p>
                <p>@Html.DisplayFor(modelItem => item.Note)</p>
                <hr />
            }
        </div>
    </div>
    <div class="card col-md-12">
        <div class="header">
            <h2>Adicionar Apontamento</h2>
        </div>
        <div class="body">
            <div class="form-group col-md-12">
                <label class="control-label">Data de Realização</label>
                <input id="AppointmentDate" class="form-control">
            </div>
            <div class="form-group col-md-12">
                <label class="control-label">Apontamento</label>
                <textarea id="AppointmentDesc" class="form-control"></textarea>
            </div>
            <a onclick="addAppointment();" class="btn btn-primary btn-export">
                <i class="fa fa-plus"></i> Adicionar Apontamento
            </a>
        </div>
    </div>
</div>
<div class="col-md-8">
    <div class="card">
        <div class="header">
            <h2>Animal - @Html.DisplayFor(model => model.Name)</h2>
        </div>
        <div class="body clearfix">

            <div class="col-md-12">
                <div class="col-md-5">
                    <b>@Model.getBirthdayDetaisl()[0] </b>@Model.getBirthdayDetaisl()[1]
                </div>
                <div class="col-md-2">
                    <b>@Html.DisplayNameFor(model => model.Gender): </b>@Html.DisplayFor(model => model.Gender)
                </div>
                <div class="col-md-2">
                    <b>@Html.DisplayNameFor(model => model.Breed): </b>@Html.DisplayFor(model => model.Breed.Name)
                </div>
                <div class="col-md-3">
                    <b>@Html.DisplayNameFor(model => model.Color): </b>@Html.DisplayFor(model => model.Color)
                </div>
            </div>
            <div class="col-md-12">
                @if (!Model.hasOVH())
                {
                    <hr/>
                    <div class="col-md-12" id="OVH">
                        <h3>Adicionar esterilização</h3>
                        <div class="form-group col-md-6">
                            <label class="control-label">Data de Realização</label>
                            <input id="OVHDate" class="form-control">
                        </div>
                        <div class="form-group col-md-6">
                            <label class="control-label">Notas</label>
                            <textarea id="OVHNotes" class="form-control"></textarea>
                        </div>
                        <a onclick="addOVH();" class="btn btn-primary btn-export">
                            <i class="fa fa-plus"></i> Adicionar Esterilização
                        </a>
                    </div>
                }
                else
                {
                    <h3>Esterilização:</h3>
                    <p>@Model.OVHNotes()</p>
                }
            </div>
        </div>
    </div>


    <div class="card">
        <div class="header">
            <h2>Colónia - @Html.DisplayFor(model => model.Colony.Name)</h2>
        </div>
        <div class="body">
            <div style="height: 500px;" id="map"></div>
        </div>
    </div>

</div>



    <script src="~/plugins/momentjs/moment.js"></script>
    <script src="~/plugins/bootstrap-material-datetimepicker/js/bootstrap-material-datetimepicker.js"></script>
    <script>
    $('#AppointmentDate').bootstrapMaterialDatePicker({ weekStart: 0, time: false});
    $('#OVHDate').bootstrapMaterialDatePicker({ weekStart: 0, time: false});


    initAutocomplete();

    function initAutocomplete() {
        var map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: @Model.Colony.GetLatitude(), lng: @Model.Colony.GetLongitude() },
            zoom: 50,
            mapTypeId: 'satellite'
        });


        new google.maps.Marker({
            position: { lat: @Model.Colony.GetLatitude(), lng: @Model.Colony.GetLongitude() },
            map: map
        });
    }
        

    function addAppointment() {

        var Date = document.getElementById("AppointmentDate").value;
        var Note = document.getElementById("AppointmentDesc").value;

        if (Date === "" ||  Note === "")
            swal({
                text: 'Tem de preencher todos os campos',
                type: 'error'
            });
        else
            swal({
                title: 'Confirmar?',
                text: 'Pretende Adicionar este Apontamento?',
                type: "warning",
                buttons: true,
                dangerMode: true,
                showCancelButton: true
            }).then(function (result) {
                if(result.confirm)
                    $.ajax({
                        type: "post",
                        url: "/Appointments/MyCreateAnimal?Date=" + Date + "&Appoint=" + Note + "&Animal=" + @Model.ID ,
                        ajaxasync: true,
                        success: function() {
                            location.reload();
                        }
                    });
            });
        }

    

    function addOVH() {

        var Date = document.getElementById("OVHDate").value;
        var Note = document.getElementById("OVHNotes").value;

        if (Date === "" ||  Note === "")
            swal({
                text: 'Tem de preencher todos os campos',
                type: 'error'
            });
        else
            swal({
                title: 'Confirmar?',
                text: 'Pretende Adicionar esta Esterilização?',
                type: "warning",
                buttons: true,
                dangerMode: true,
                showCancelButton: true
            }).then(function (result) {
                if(result)
                    $.ajax({
                        type: "post",
                        url: "/Appointments/MyCreateAnimalOVH?Date=" + Date + "&Appoint=" + Note + "&Animal=" + @Model.ID,
                        ajaxasync: true,
                        success: function() {
                            $.ajax({
                                type: "post",
                                url: "/Animals/AddOVH?id=" + @Model.ID + "&date=" + Date,
                                ajaxasync: true,
                                success: function() {
                                    location.reload();
                                }
                            });
                        }
                    });
            });
    }

    function DeleteAppointment(id) {

        swal({
                title: 'Confirmar?',
                text: 'Pretende Apagar este Apontamento?',
                type: "error",
                buttons: true,
                dangerMode: true,
                showCancelButton: true
        }).then(function (result) {
            if(result.confirm)
                $.ajax({
                    type: "post",
                    url: "/Appointments/Delete/"+id,
                    ajaxasync: true,
                    success: function() {
                        location.reload();
                    }
                });
            });
    }

    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCUZ8_O03cS9hUMhJbTQ0rOIjskzNcDzds&libraries=places&callback=initAutocomplete"
            async defer></script>

    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCUZ8_O03cS9hUMhJbTQ0rOIjskzNcDzds&libraries=places"></script>

